# Generated by Django 3.2.8 on 2022-04-13 07:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, unique=True)),
                ('deleted_at', models.DateTimeField(blank=True, max_length=6, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, max_length=6)),
                ('created_date', models.DateTimeField(auto_now_add=True, max_length=6)),
            ],
            options={
                'db_table': 'class_room',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('deleted_at', models.DateTimeField(blank=True, max_length=6, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, max_length=6)),
                ('created_date', models.DateTimeField(auto_now_add=True, max_length=6)),
            ],
            options={
                'db_table': 'subject',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('tel', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, max_length=6, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, max_length=6)),
                ('created_date', models.DateTimeField(auto_now_add=True, max_length=6)),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student_manager.classroom')),
                ('subjects', models.ManyToManyField(to='student_manager.Subject')),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, max_length=6, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, max_length=6, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, max_length=6)),
                ('created_date', models.DateTimeField(auto_now_add=True, max_length=6)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
        ),
    ]
